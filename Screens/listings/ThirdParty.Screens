{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "https://services.greenbuttondata.org/ThirdParty",
  "resourcePath": "/resources",
  "produces":
	[
    "text/html"
  ],
  "apis":
	[
    {
      "path": "/home",
      "operations":
      [
        {
          "method": "GET",
          "summary": "The Third Party's Home Screen",
          "notes": "The requesting browser displays the Third Party Portal's Home Screen. The response SHOULD provide the Retail Customer the opportunity to Login.",
          "nickname": "getPortalHome",
          "produces": ["text/html"],
					"authorizations": [],
					"parameters": [],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/login",
      "operations":
      [
        {
          "method": "GET",
          "summary": "The Third Party's Login Screen",
          "notes": "The Retail Customer's browser displays the Third Party Portal's Login Screen. The expected result is a Login POST which is processed by the Third Party.",
          "nickname": "portalSignin",
          "produces": ["text/html"],
					"authorizations": [],
					"parameters": [],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/RetailCustomer/{retailCustomerId}/home",
      "operations":
      [
        {
          "method": "GET",
          "summary": "[ESPI] The Third Party's Retail Customer's Home Screen",
          "notes": "The requesting browser displays the Third Party Portal's Retail Customer's Home Screen, which is shown after the Retail Customer successfully completes the Login process.",
          "nickname": "getRetailCustomerHome",
          "produces": ["text/html"],
					"authorizations": [],
          "parameters":
          [
            {
              "name": "RetailCustomerID",
              "description": "The Retail Customer's ID",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "path"
            }
          ],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/TermsOfService",
      "operations":
      [
        {
          "method": "GET",
          "summary": "Third Party's Terms of Service Screen",
          "notes": "The Third Party Application's Terms of Service SHOULD be presented to the Retail Customer by the Data Custodian's Authorization Server during the process of authorizing the Third Party Application access to the Retail Customer's energy usage information.",
          "nickname": "termsOfService",
          "produces": ["text/html"],
					"authorizations": [],
					"parameters": [],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/UsagePolicy",
      "operations":
      [
        {
          "method": "GET",
          "summary": "Third Party's Usage Policy Screen",
          "notes": "The Third Party Application's Usage Policy SHOULD be presented to the Retail Customer by the Data Custodian's Authorization Server during the process of authorizing the Third Party Application access to the Retail Customer's energy usage information.",
          "nickname": "usagePolicy",
          "produces": ["text/html"],
					"authorizations": [],
					"parameters": [],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/RetailCustomer/{retailCustomerId}/DataCustodianList",
      "operations":
      [
        {
          "method": "GET",
          "summary": "[ESPI] The Third Party's supported Data Custodian Screen",
          "notes": "The Third Party displays a Retail Customer a list of supported Data Custodians from which the Retail Customer selects a Data Custodian the Third Party will be authorized to access",
          "nickname": "getPortalHome",
          "produces": ["text/html"],
					"authorizations": [],
          "parameters":
          [
            {
              "name": "RetailCustomerID",
              "description": "The Retail Customer's ID",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "path"
            }
          ],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    },
    {
      "path": "/RetailCustomer/{retailCustomerId}/ScopeSelection",
      "operations":
      [
        {
          "method": "GET",
          "summary": "[ESPI] Third Party's Retail Customer's SCOPE Selection Screen",
          "notes": "The Third Party displays a Retail Customer a screen that allows them to select the types of Data Custodian data to be accessed by the Third Party",
          "nickname": "getPortalHome",
          "produces": ["text/html"],
					"authorizations": [],
          "parameters":
          [
            {
              "name": "RetailCustomerID",
              "description": "The Retail Customer's ID",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "path"
            }
          ],
          "responseMessages":
          [
            {
              "code": 200,
							"message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            }
          ]
        }
      ]
    }
  ]
}
