{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.3",
  "authorizations": [],
  "basePath": "http://54.200.90.158:8080/DataCustodian",
  "resourcePath": "/",
  "produces":[
    "application/xml",
    "application/json",
    "text/plain",
    "text/html"
  ],
  "apis":[
    {
      "path": "/espi/1_1/register/",
      "operations":[
        {
          "method": "POST",
          "summary": "Third Party Application registers with a Data Custodian.",
          "notes": "Follows the proposed OAuth 2.0 Dynamic Client Registration Protocol -- Draft 14 with modifications based on the Energy Services Provider Interface (ESPI) 1.0 standard.  The parameters are Third Party Application metadata values required to complete the  registration process.",
          "responseClass": "Registration Information Response",
          "nickname": "registerThirdParty",
          "parameters":[
            {
              "paramType": "form",
              "name": "redirect_uri",
              "description": "A URI to be used in the OAuth 2.0 authorization code flow sequence. This MUST be an absolute URI as defined by [RFC3986] Section 4.3.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/OAuthCallBack",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "client_name",
              "description" : "A human-readable name of the Third Party Application to be displayed to the Retail Customer.",
              "required": true,
              "defaultValue": "OpenESPI Green Button Third Party Application",
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "client_uri",
              "description" : "A URI that points to the homepage of the Third Party Application.  The value of this field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/home",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "logo_uri",
              "description" : "A URI that points to a logo for the Third Party Application.  The value of this field MUST point to a valid image file.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/image.jpg",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "contacts",
              "description" : "An array of email addresses for people responsible for the Third Party Application.  The authorization server MAY make these addresses available to Retail Customers for support requests for the Third Party Application.  An authorization server MAY use these email addresses as identifiers for an administrative page for the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "dataType": "array",
              "items":{
                "type": "string"
              }
            },
            {
              "paramType": "form",
              "name": "tos_uri",
              "description" : "A URI that points to a human-readable Terms of Service document for the Third Party Application.  The Terms of Service usually describes a contractual relationship between the Retail Customer and the Third Party Application that the Retail Customer accepts when authorizing access to the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/TermsOfService",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "policy_uri",
              "description": "A URI that points to a human-readable Policy document for the Third Party Application.  The policy usually describes how a Retail Customer's energy usage information will be used by the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/UsagePolicy",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "token_endpoint_auth_method",
              "description": "The requested authentication method to be used by the OAuth 2.0 token endpoint. The only accepted value is 'client_server_basic' (the OAuth 2.0 token endpoint uses the HTTP Basic authentication scheme as defined in [RFC2617] to authenticate with the authorization server.",
              "defaultValue": "client_secret_basic",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": ["client_secret_basic"]
            },
            {
              "paramType": "form",
              "name": "scope",
              "description": "A space separated list of scope values the Third Party Application can use when requesting access tokens. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "grant_types",
              "description": "Array of OAuth 2.0 grant types the Third Party Application may request. The supported OAuth 2.0 grant types are: [\"authorization_code\", \"client_credentials\",\"refresh_token\"].",
              "required": true,
              "allowMultiple": true,
              "defaultValue": "authorization_code, refresh_token",
              "dataType": "array",
              "items":
							{
                "type": "string"
              },
              "enum": ["authorization_code","client_credentials","refresh_token"]
            },
            {
              "paramType": "form",
              "name": "response_types",
              "description": "The OAuth 2.0 response types the Third Party Application may request.  The supported OAuth 2.0 response type is [\"code\"].",
              "required": true,
              "defaultValue" : "code",
              "allowMultiple": false,
              "dataType": "string",
              "enum": ["code"]
            },
            {
              "paramType": "form",
              "name": "software_id",
              "description": "An identifier for the software that comprises the Third Party Application.  The software_id is asserted by the Third Party software and is intended to be shared between all copies of the Third Party software.  The value of this field MAY be a UUID {RFC4122].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "software_version",
              "description": "A version identifier for the software that comprises a Third Party Application.  The value of this field is a string that is intended to be compared using string equality matching.  The value of the string software_version SHOULD change on any update to the Third Party software.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_application_description",
              "description": "** ESPI ** -- A description of the application.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_application_type",
              "description": "** ESPI ** -- A code indicating the type of Third Party Application.  The defined values are: [\"1 - Web Application\", \"2 - Desktop Application\", \"3 - Mobile Application\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": ["1","2","3"]
            },
            {
              "paramType": "form",
              "name": "third_party_application_use",
              "description": "** ESPI ** -- A code indicating the expected use of the Third Party Application.  The defined values are: [\"1 - Energy Management\", \"2 - Comparisons\", \"3 - Government\", \"4 - Academic\", \"5 - Law Enforcement\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": ["1","2","3","4","5"]
            },
            {
              "paramType": "form",
              "name": "third_party_application_status",
              "description": "** ESPI ** -- A code indicating the current status of the Third Party Application.  The defined values are: [\"1 - Development\", \"2 - Review/Test\", \"3 - Production (Live)\", \"4 - Retired (Remove)\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": ["1","2","3","4"]
            },
            {
              "paramType": "form",
              "name": "third_party_phone",
              "description": "** ESPI ** -- The phone number of the Third Party organization to which access will be granted. (For debugging -- not to be shared with customers).",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_notify_uri",
              "description": "** ESPI ** -- The default endpoint for Third Party notification of Batch data availability that is then requested from the Data Custodian via the Batch resource.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/Notify_SubscriptionAvailable",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_data_custodian_selection_screen_uri",
              "description": "** ESPI ** -- URL of Third Party's supported Data Custodian Selection web page.  The field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/RetailCustomer/{RetailCustomerID}/DataCustodianList",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_login_screen_uri",
              "description": "** ESPI ** -- URL of the Login Screen used by the Third Party to authenticate the identity of the Retail Customer.  The field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/login",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_scope_selection_screen_uri",
              "description": "** ESPI ** -- URL of the Scope Selection Screen used by the Retail Customer to select the characteristics of the Green Button data to be shared with the ThirdParty.  The field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/RetailCustomer/{RetailCustomerID}/ScopeSelection",
              "dataType": "string"
            },
            {
              "paramType": "form",
              "name": "third_party_user_portal_screen_uri",
              "description": "** ESPI ** -- URL of a Third Party's web page the Retail Customer user-agent is returned to after authorizing the Third Party access to the Retail Customer's energy usage information (EUI).  The field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/RetailCustomer/{RetailCustomerID}/home",
              "dataType": "string"
            }
          ],
          "produces":[
            "application/json"
          ],
          "responseMessages":[
            {
              "code": 400,
              "message": "Bad Request",
              "parameters":[
                {
                  "error": "[\"invalid_client_metadata\", \"invalid_redirect_uri\", \"invalid_client_id\"]",
                  "error_description": "A Human-readable text description of the error for debugging."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth/authorize",
      "operations":[
        {
          "method": "GET",
          "summary": "Third Party Application obtains an OAuth 2.0 authorization code.",
          "responseClass": "OAuth 2.0 Authorization Response",
          "nickname": "getAuthorizationCode",
          "parameters":[
            {
              "paramType": "query",
              "name": "response_type",
              "description": "OAuth 2.0 response type.  Value MUST be set to code.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "code",
              "dataType": "string",
              "enum": ["code"]
            },
            {
              "paramType": "query",
              "name": "client_id",
              "description": "OAuth 2.0 client id value assigned to Third Party Application during registration process.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "query",
              "name": "redirect_uri",
              "description": "A Third Party Application URI used to return the OAuth 2.0 authorization code.  This MUST be the same URI the Third Party supplied during the registration process (metadata field \"redirect-uris\".",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://54.200.90.158:8080/ThirdParty/OAuthCallBack",
              "dataType": "string"
            },
            {
              "paramType": "query",
              "name": "scope",
              "description" : "A space separated list of scope values the Third Party Application can use when requesting access tokens. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {
              "paramType": "query",
              "name": "state",
              "description" : "An opaque value used by the Third Party Application to maintain state between the request and callback.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            }
          ],
          "produces":[
            "text/html",
            "application/xhtml+xml",
            "application/xml"
          ],
          "responseMessages":[
            {
              "code": 400,
              "message": "Bad Request",
              "parameters":[
                {
                  "error": "[\"invalid_request\", \"unauthorized_client\", \"access_denied\", \"unsupported_response_type\", \"invalid_scope\", \"server_error\", \"temporarily_unavailable\"]",
                  "error_description": "A Human-readable text description of the error for debugging."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth/token",
      "operations":[
        {
				  "authorizations":{
					  "basicAuth":{
						  "type": "basicAuth"
						}
					},
          "method": "POST",
          "summary": "Third Party Application obtains an OAuth 2.0 access token based on authorization code flow.",
          "notes": "The HTTP header must contain the Authorization: Basic {DataCustodianAuthorizationString}. This is typically an APIKey -  A string assigned by the DataCustodian {AuthorizationServer} used to authenticate the Third Party.  The Third Party utilizes the HTTP Basic authentication scheme [RFC2617] to submit this string.",
          "responseClass" : "OAuth 2.0 Access Token Authorization Code & Refresh Token Response",
          "nickname" : "getAccessTokenAuthCode",
          "parameters":[
            {
						  "name": "Authorization",
							"description": "The Third Party's Data Custodian assigned Authorization Code.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
							"defaultValue": "Basic {authorization_code}",
              "paramType": "header"
            },
            {
              "name": "grant_type",
              "description": "OAuth 2.0 grant type.  Value MUST be set to authorization_code.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "authorization_code",
              "dataType": "string",
              "enum": ["authorization_code"],
              "paramType": "header"
            },
            {
              "name": "code",
              "description": "The authorization code received from the authorization server.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "header"
            },
            {
              "name": "redirect_uri",
              "description": "The redirect_uri parameter supplied in the authorization request. Their values MUST be identical.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "http://54.200.90.158:8080/ThirdParty/OAuthCallBack",
              "dataType": "string",
              "paramType": "header"
            }
          ],
          "produces":[
            "application/json"
          ],
          "responseMessage":[
            {
              "code": 200,
              "message": "OK",
              "parameters":[
                {
                  "access_token": "The access token issued by the authorization server",
                  "token_type": "Bearer",
                  "expires_in": "The lifetime in seconds of the access token",
                  "refresh_token": "The refresh token, which can be used to obtain new access tokens using the same authorization code provided by the authorization server",
                  "resourceURI": "The URI of the resource to which access is being granted",
                  "AuthorizationURI": "The URI of the authorization which contains the issued access token"
                }
              ]
            },
            {
              "code" : 400,
              "message" : "Service Not Available"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth/token",
      "operations":[
        {
				  "authorizations":{
					  "basicAuth":{
						  "type": "basicAuth"
						}
					},
          "method": "POST",
          "summary": "Third Party Application obtains an OAuth 2.0 access token based on client credentials flow.",
          "notes": "The HTTP header must contain the Authorization: Basic {DataCustodianAuthorizationString}. This is typically an APIKey -  A string assigned by the DataCustodian {AuthorizationServer} used to authenticate the Third Party.  The Third Party utilizes the HTTP Basic authentication scheme [RFC2617] to submit this string.",
          "responseClass": "OAuth 2.0 Access Token Client Credentials Response",
          "nickname": "getAccessTokenClientCredentials",
          "parameters":[
            {
						  "name": "Authorization",
							"description": "The Third Party's Data Custodian assigned Authorization Code.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
							"defaultValue": "Basic {authorization_code}",
              "paramType": "header"
            },
            {
              "name": "grant_type",
              "description" : "OAuth 2.0 grant type.  Value MUST be set to client_credentials.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "client_credentials",
              "dataType": "string",
              "enum": ["client_credentials"],
              "paramType": "header"
            },
            {
              "name" : "scope",
              "description" : "A space separated list of scope values the Third Party Application can use when requesting access tokens. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "header"
            }
          ],
          "produces":[
            "application/json"
          ],
          "responseMessage":[
            {
              "code": 200,
              "message": "OK",
              "parameters":[
                {
                  "access_token": "The access token issued by the authorization server",
                  "token_type": "Bearer",
                  "expires_in": "The lifetime in seconds of the access token",
                  "resourceURI": "The URI of the resource to which access is being granted",
                  "AuthorizationURI": "The URI of the authorization which contains the issued access token"
                }
              ]
            },
            {
              "code" : 400,
              "message" : "Service Not Available"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth/token",
      "operations":[
        {
				  "authorizations":{
					  "basicAuth":{
						  "type": "basicAuth"
						}
					},
          "method": "POST",
          "summary": "Third Party Application obtains an OAuth 2.0 access token based on refresh token flow.",
          "notes": "The HTTP header must contain the Authorization: Basic {DataCustodianAuthorizationString}. This is typically an APIKey -  A string assigned by the DataCustodian {AuthorizationServer} used to authenticate the Third Party.  The Third Party utilizes the HTTP Basic authentication scheme [RFC2617] to submit this string.",
          "responseClass" : "OAuth 2.0 Access Token Authorization Code & Refresh Token Response",
          "nickname" : "getAccessTokenRefreshToken",
          "parameters":[
            {
						  "name": "Authorization",
							"description": "The Third Party's Data Custodian assigned Authorization Code.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
							"defaultValue": "Basic {authorization_code}",
              "paramType": "header"
            },
            {
              "name": "grant_type",
              "description": "OAuth 2.0 grant type.  Value MUST be set to refresh_token.",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "refresh_token",
              "dataType": "string",
              "enum": ["refresh_token"],
              "paramType": "header"
            },
            {
              "name": "refresh_token",
              "description": "The refresh token received from the authorization server.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "header"
            },
            {
              "name": "scope",
              "description" : "A space separated list of scope values the Third Party Application can use when requesting access tokens. The cope MUST NOT include any scope not originally granted by the resource owner. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "header"
            }
          ],
          "produces":[
            "application/json"
          ],
          "responseMessage":[
            {
              "code": 200,
              "message": "OK",
              "parameters":[
                {
                  "access_token": "The access token issued by the authorization server",
                  "token_type": "Bearer",
                  "expires_in": "The lifetime in seconds of the access token",
                  "refresh_token": "The refresh token, which can be used to obtain new access tokens using the same authorization code provided by the authorization server",
                  "resourceURI": "The URI of the resource to which access is being granted",
                  "AuthorizationURI": "The URI of the authorization which contains the issued access token"
                }
              ]
            },
            {
              "code": 400,
              "message": "Service Not Available"
            }
          ]
        }
      ]
    },
    {
      "path": "/espi/1_1/resource/ReadServiceStatus",
      "operations":[
        {
				  "authorizations":{
            "oauth2":{
              "type":"oauth2",
              "scopes":["PUBLIC"],
              "grantTypes":{
                "authorization_code":{
                  "tokenRequestEndpoint":{
                    "url":"http://54.200.90.158:8080/DataCustodian/oauth/token",
                    "clientIdName":"client_id",
                    "clientSecretName":"client_secret"
                  },
                  "tokenEndpoint":{
                    "url":"http://54.200.90.158:8080/DataCustodian/oauth/token",
                    "tokenName":"access_code"
                  }
                }
			        }
		        }
					},
          "method": "GET",
          "summary": "Obtain the Data Custodian Resource Server Status",
          "responseClass": "application/atom+xml",
          "nickname": "getServiceStatus",
          "produces":[
            "application/xml"
          ],
          "parameters":[
            {
              "name": "accessToken",
              "description": "Access token issued by OAuth 2.0 authorization server",
              "defaultValue": "Bearer {access_token}",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            },
            {
              "name": "Accept",
              "description": "Accept type for the Request",
              "defaultValue": "application/atom+xml",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            }
          ],
          "responseMessages":[
            {
              "code": 200,
              "message": "OK",
              "parameters":[
                {
                  "feed" : "An ESPI XML representation of <example to be supplied>"
                }
              ]
            },
            {
              "code": 400,
              "message": "Service Not Available"
            }
          ]
        }
      ]
    },
    {
      "path": "/espi/1_1/resource/ThirdParty/{ThirdPartyID}/Batch",
      "operations":[
        {
				  "authorizations":{
            "oauth2":{
              "type":"oauth2",
              "scopes":["PUBLIC"],
              "grantTypes":{
                "authorization_code":{
                  "tokenRequestEndpoint":{
                    "url":"http://54.200.90.158:8080/DataCustodian/oauth/token",
                    "clientIdName":"client_id",
                    "clientSecretName":"client_secret"
                  },
                  "tokenEndpoint":{
                    "url":"http://54.200.90.158:8080/DataCustodian/oauth/token",
                    "tokenName":"access_code"
                  }
                }
			        }
		        }
					},
          "method": "GET",
          "summary": "A Third Party requests the GET of a Batch.",
          "responseClass" : "ESPI XML structure of Batch feed",
          "nickname": "getBatch",
          "produces":[
            "application/atom+xml"
          ],
          "parameters":[
            {
              "name": "accessToken",
              "description": "Access token issued by OAuth 2.0 authorization server",
              "defaultValue": "Bearer {access_token}",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            },
            {
              "name": "Accept",
              "description": "Accept type for the Request",
              "defaultValue": "application/atom+xml",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            }
          ],
          "responseMessages":[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Service Not Available"
            }
          ]
        }
      ]
    }
  ],
  "models":{
    "Authorization":{
      "id": "Authorization",
      "properties":{
        "name":{
          "type": "string"
        },
        "id":{
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Registration Information Response":{
      "properties":{
        "client_id":{
          "required": true,
          "type":"string"
        },
        "client_secret":{
          "required": true,
          "type":"string"
        },
        "client_id_issued_at":{
          "required": true,
          "type":"string, date-time"
        },
        "client_secret_expires_at":{
          "required": true,
          "type":"string, date-time"
        },
        "registration_access_token":{
          "required": true,
          "type":"string"
        },
        "registration_client_uri":{
          "required": true,
          "type":"string"
        },
        "redirect_uri":{
          "required": true,
          "type":"string"
        },
        "client_name":{
          "required": true,
          "type":"string"
        },
        "client_uri":{
          "required": true,
          "type":"string"
        },
        "logo_uri":{
          "required": true,
          "type":"string"
        },
        "contacts":{
          "required": true,
          "type":"array",
          "items":{
            "type": "string"
          }
        },
        "tos_uri":{
          "required": true,
          "type":"string"
        },
        "policy_uri":{
          "required": true,
          "type":"string"
        },
        "token_endpoint_auth_method":{
          "required": true,
          "type":"string",
          "description": "OAuth 2.0 token endpoint authentication method",
          "enum":["client_secret_basic"]
        },
        "scope":{
          "required": true,
          "type":"string"
        },
        "grant_types":{
          "required": true,
          "type":"array",
          "items":{
            "type": "string"
          },
          "description": "OAuth 2.0 grant types",
          "enum":["authorization_code","client_credentials","refresh_token"]
        },
        "response_types":{
          "required": true,
          "type":"string",
          "description": "OAuth 2.0 response types",
          "enum":["code"]
        },
        "software_id":{
          "required": true,
          "type":"string",
          "description": "OAuth 2.0 software_id"
        },
        "software_version":{
          "required": true,
          "type":"string",
          "description": "OAuth 2.0 software_version"
        },
        "third_party_application_description":{
          "required": true,
          "type":"string"
        },
        "third_party_application_type":{
          "required": true,
          "type":"string",
          "description": "** ESPI ** -- application type",
          "enum":["1 - Web Application","2 -  Desktop Application","3 - Mobile Application"]
        },
        "third_party_application_use":{
          "required": true,
          "type":"string",
          "description": "** ESPI ** -- application use",
          "enum":["1 - Energy Management","2 - Comparisons","3 - Government","4 - Academic","5 - Law Enforcement"]
        },
        "third_party_application_status":{
          "required": true,
          "description": "** ESPI ** -- Third Party application status",
          "type":"string",
          "enum":["1 - Development","2 - Review/Test","3 - Production (Live)","4 - Retired (Remove)"]
        },
        "third_party_phone":{
          "required": true,
          "description": "** ESPI ** -- Third Party organization's phone number",
          "type":"string"
        },
        "third_party_notify_uri":{
          "required": true,
          "description": "** ESPI ** -- Third Party application's notification URI",
          "type":"string"
        },
        "third_party_data_custodian_selection_screen_uri":{
          "required": true,
          "description": "** ESPI ** -- URL of Third Party's supported Data Custodian Selection web page.  The field MUST be a valid web page.",
          "type":"string"
        },
        "third_party_login_screen_uri":{
          "required": true,
          "description": "** ESPI ** -- URL of the Login Screen used by the Third Party to authenticate the identity of the Retail Customer.  The field MUST be a valid web page.",
          "type":"string"
        },
        "third_party_scope_selection_screen_uri":{
          "required": true,
          "description": "** ESPI ** -- URL of the Scope Selection Screen used by the Retail Customer to select the characteristics of the Green Button data to be shared with the ThirdParty.  The field MUST be a valid web page.",
          "type":"string"
        },
        "third_party_user_portal_screen_uri":{
          "required": true,
          "description": "** ESPI ** -- URL of a Third Party's web page the Retail Customer user-agent is returned to after authorizing the Third Party access to the Retail Customer's energy usage information (EUI).  The field MUST be a valid web page.",
          "type":"string"
        },
        "authorization_server_uri":{
          "required": true,
          "description": "OAuth 2.0 -- The URI of the server issuing access tokens to the Third Party after successfully authenticating the Retail Customer and obtaining their authorization.",
          "type":"string"
        },
        "authorization_server_authorization_endpoint":{
          "required": true,
          "description": "OAuth 2.0 -- The URL used by the Third Party to obtain authorization from the Retail Customer via user-agent redirection.",
          "type":"string"
        },
        "authorization_server_registration_endpoint":{
          "required": true,
          "description": "** ESPI ** -- The URL used by the Third Party to register an application with the Data Custodian.",
          "type":"string"
        },
        "data_custodian_batch_uri":{
          "required": true,
          "description": "** ESPI ** -- The URL of the Data Custodian's Batch Request endpoint. The value is provided by the Data Custodian and cannot be modified by the Third Party.  The field MUST be a valid URL.",
          "type":"string"
        },
        "data_custodian_bulk_uri":{
          "required": true,
          "description": "** ESPI ** -- The URL of the Data Custodian's Bulk Request endpoint. The value is provided by the Data Custodian and cannot be modified by the Third Party.  The field MUST be a valid URL.",
          "type":"string"
        },
        "data_custodian_subscription_uri":{
          "required": true,
          "description": "** ESPI ** -- The URL of the Data Custodian's Subscription Request endpoint. The value is provided by the Data Custodian and cannot be modified by the Third Party.  The field MUST be a valid URL.",
          "type":"string"
        },
        "data_custodian_application_status":{
          "required": true,
          "description": "** ESPI ** -- A code indicating the current status of the application.  The value is provided by the Data Custodian and cannot be modified by the Third Party.",
          "type":"string",
          "enum":["1 - Review","2 - Production (Live)","3 - On hold","4 - Revoked"]
        },
        "data_custodian_third_party_selection_screen_uri":{
          "required": true,
          "description": "** ESPI ** -- The URL of the Data Custodian's Third Party Selection web page. The value is provided by the Data Custodian and cannot be modified by the Third Party.  The field MUST be a valid URL.",
          "type":"string"
        },
        "data_custodian_resource_endpoint":{
          "required": true,
          "description": "** ESPI ** -- The URL of the Data Custodian's Resource endpoint. The value is provided by the Data Custodian and cannot be modified by the Third Party.  The field MUST be a valid URL.",
          "type":"string"
        }
      },
      "id": "Registration Information Response"
    },
    "OAuth 2.0 Authorization Response":{
      "properties":{
        "code":{
          "paramType": "query",
          "required": true,
          "description": "Authorization code.  The authorization code MUST expire shortly and MUST NOT be used more than once.",
          "type":"string"
        },
        "state":
        {
          "paramType": "query",
          "required": true,
          "description": "MUST contain the exact value received in the request.",
          "type":"string"
        }
      },
      "id": "OAuth 2.0 Authorization Response"
    },
    "OAuth 2.0 Access Token Authorization Code & Refresh Token Response":{
      "properties":{
        "access_token":{
          "paramType": "form",
          "required": true,
          "description": "The access token issued by the authorization server.",
          "type":"string"
        },
        "token_type":{
          "paramType": "form",
          "required": true,
          "description": "The type of the token issued.  Value is case insensitive.",
          "enum" : ["Bearer"],
          "type":"string"
        },
        "expires_in":{
          "paramType": "form",
          "required": true,
          "description": "The lifetime in seconds of the access token.",
          "type": "integer"
        },
        "refresh_token":{
          "paramType": "form",
          "required": true,
          "description": "The refresh token, which can be used to obtain new access tokens using the same authorization code provided by the authorization server",
          "type": "string"
        },
        "scope":{
          "paramType": "form",
          "required": true,
          "description": "The scope of the access token issued by the authorization server",
          "type": "string"
        },
        "resourceURI":{
          "paramType": "form",
          "required": true,
          "description": "The URI of the resource to which access is being granted",
          "type": "string"
        },
        "authorizationURI":{
          "paramType": "form",
          "required": true,
          "description": "The URI of the authorization which contains the issued access token",
          "type": "string"
        }
      },
      "id": "OAuth 2.0 Access Token Authorization Code & Refresh Token Response"
    },
    "OAuth 2.0 Access Token Client Credentials Response":{
      "properties":{
        "access_token":{
          "paramType": "form",
          "required": true,
          "description": "The access token issued by the authorization server.",
          "type":"string"
        },
        "token_type":{
          "paramType": "form",
          "required": true,
          "description": "The type of the token issued.  Value is case insensitive.",
          "enum" : ["Bearer"],
          "type":"string"
        },
        "expires_in":{
          "paramType": "form",
          "required": true,
          "description": "The lifetime in seconds of the access token.",
          "type": "integer"
        },
        "scope":{
          "paramType": "form",
          "required": true,
          "description": "The scope of the access token issued by the authorization server",
          "type": "string"
        },
        "resourceURI":{
          "paramType": "form",
          "required": true,
          "description": "The URI of the resource to which access is being granted",
          "type": "string"
        },
        "authorizationURI":{
          "paramType": "form",
          "required": true,
          "description": "The URI of the authorization which contains the issued access token",
          "type": "string"
        }
      },
      "id": "OAuth 2.0 Access Token Client Credentials Response"
    }
  }
}
