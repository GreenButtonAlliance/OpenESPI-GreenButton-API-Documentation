{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://greenbuttondata.org/datacustodian",
  "resourcePath": "/",
  "produces": [
    "application/xml",
    "application/json",
    "text/plain",
    "text/html"
  ],
  "apis": [	
    { "path": "/espi/1_1/register/",
      "operations" : [
        {	
          "method": "POST",
          "summary": "Third Party Application registers with a Data Custodian.",
          "notes": "Follows the proposed OAuth 2.0 Dynamic Client Registration Protocol -- Draft 14 with modifications based on the Energy Services Provider Interface (ESPI) 1.0 standard.  The parameters are Third Party Application metadata values required to complete the  registration process.",
          "responseClass" : "Registration Information Response",
          "nickname" : "registerThirdParty",
          "parameters" : [
           {	
              "paramType": "form",
              "name": "redirect_uris",
              "description" : "A URI to be used in the OAuth 2.0 authorization code flow sequence. This MUST be an absolute URI as defined by [RFC3986] Section 4.3.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/OAuthCallBack",
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name" : "client_name",
              "description" : "A human-readable name of the Third Party Application to be displayed to the Retail Customer.",
              "required": true,
              "defaultValue" : "OpenESPI Green Button Third Party Application",
              "allowMultiple": false,
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name" : "client_uri",
              "description" : "A URI that points to the homepage of the Third Party Application.  The value of this field MUST be a valid web page.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/home",
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name" : "logo_uri",
              "description" : "A URI that points to a logo for the Third Party Application.  The value of this field MUST point to a valid image file.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/image.jpg",
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name" : "contacts",
              "description" : "An array of email addresses for people responsible for the Third Party Application.  The authorization server MAY make these addresses available to Retail Customers for support requests for the Third Party Application.  An authorization server MAY use these email addresses as identifiers for an administrative page for the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "dataType": "array",
              "items": {
                "type": "string"
              }
            },							
            {	
              "paramType": "form",
              "name" : "tos_uri",
              "description" : "A URI that points to a human-readable Terms of Service document for the Third Party Application.  The Terms of Service usually describes a contractual relationship between the Retail Customer and the Third Party Application that the Retail Customer accepts when authorizing access to the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/TermsOfService",
              "dataType": "string"
            },
            {	
              "paramType" : "form",
              "name" : "policy_uri",
              "description" : "A URI that points to a human-readable Policy document for the Third Party Application.  The policy usually describes how a Retail Customer's energy usage information will be used by the Third Party Application.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/UsagePolicy",
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name": "token_endpoint_auth_method",
              "description" : "The requested authentication method to be used by the OAuth 2.0 token endpoint. The only accepted value is 'client_server_basic' (the OAuth 2.0 token endpoint uses the HTTP Basic authentication scheme as defined in [RFC2617] to authenticate with the authorization server.",
              "defaultValue": "client_secret_basic",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum":[
                "client_secret_basic"
              ]
            },
            {	
              "paramType": "form",
              "name" : "scope",
              "description" : "A space separated list of scope values the Third Party Application can use when requesting access tokens. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name": "grant_types",
              "description" : "Array of OAuth 2.0 grant types the Third Party Application may request. The supported OAuth 2.0 grant types are: [\"authorization_code\", \"client_credentials\",\"refresh_token\"].",							
              "required": true,
              "allowMultiple": true,
              "defaultValue": "authorization_code, refresh_token",
              "dataType": "array",
              "items": {
                "type": "string"
              },
              "enum": [
                "authorization_code",
                "client_credentials",
                "refresh_token"
              ]
            },
            {	
              "paramType": "form",
              "name": "response_types",
              "description" : "The OAuth 2.0 response types the Third Party Application may request.  The supported OAuth 2.0 response type is [\"code\"].",							
              "required": true,
              "defaultValue" : "code",
              "allowMultiple": false,
              "dataType": "string",
              "enum": [
                "code"
              ]
            },
            {	
              "paramType": "form",
              "name": "software_id",
              "description" : "An identifier for the software that comprises the Third Party Application.  The software_id is asserted by the Third Party software and is intended to be shared between all copies of the Third Party software.  The value of this field MAY be a UUID {RFC4122].",							
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name": "software_version",
              "description" : "A version identifier for the software that comprises a Third Party Application.  The value of this field is a string that is intended to be compared using string equality matching.  The value of the string software_version SHOULD change on any update to the Third Party software.",							
              "required": true,
              "allowMultiple": false,
              "dataType": "string"

            },						
            {	
              "paramType": "form",
              "name": "application_description",
              "description" : "** ESPI ** -- A description of the application.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string"
            },
            {	
              "paramType": "form",
              "name": "application_type",
              "description": "** ESPI ** -- A code indicating the type of Third Party Application.  The defined values are: [\"1 - Web Application\", \"2 - Desktop Application\", \"3 - Mobile Application\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            {	
              "paramType": "form",
              "name": "application_use",
              "description" : "** ESPI ** -- A code indicating the expected use of the Third Party Application.  The defined values are: [\"1 - Energy Management\", \"2 - Comparisons\", \"3 - Government\", \"4 - Academic\", \"5 - Law Enforcement\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            },
            {	
              "paramType": "form",
              "name": "third_party_application_status",
              "description" : "** ESPI ** -- A code indicating the current status of the Third Party Application.  The defined values are: [\"1 - Development\", \"2 - Review/Test\", \"3 - Production (Live)\", \"4 - Retired (Remove)\"].",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "enum": [
                "1",
                "2",
                "3",
                "4"
              ]
            },
            { 
              "paramType": "form",
              "name": "third_party_notify_uri",
              "description" : "** ESPI ** -- The default endpoint for Third Party notification of Batch data availability that is then requested from the Data Custodian via the Batch resource.",
              "required": true,
              "allowMultiple": false,
              "defaultValue" : "https://www.greenbuttondata.org/thirdparty/Notify_SubscriptionAvailable",
              "dataType": "string"
            }
          ],	    
          "produces" :
          [
            "application/json"
          ],
          "responseMessages": [
            {	
              "code" : 400,
              "message": "Bad Request",
              "parameters": [
                {	
                  "error": "[\"invalid_client_metadata\", \"invalid_redirect_uri\", \"invalid_client_id\"]",
                  "error_description": "A Human-readable text description of the error for debugging."
                }
              ]
            }
          ]
        }
      ]
    },
		{ "path": "/oauth/2_0/authorize",
		  "operations": [
			  {
			    "method": "GET",
				  "summary": "Third Party Application obtains an authorization code.",
				  "responseClass": "OAuth 2.0 Authorization Response",
				  "nickname": "getAuthorizationCode",
				  "Authorizations": {
				    "type": "oauth2"
				  },
				  "parameters": [
				    {
						  "paramType": "query",
              "name": "response_type",							
					    "description": "OAuth 2.0 response type.  Value MUST be set to code.",
						  "required": true,
						  "allowMultiple": false,
						  "defaultValue": "code",
						  "dataType": "string",
						  "enum": ["code"]
					  },
				    {
						  "paramType": "query",
              "name": "client_id",							
					    "description": "OAuth 2.0 client id value assigned to Third Party Application during registration process.",
						  "required": true,
						  "allowMultiple": false,
						  "dataType": "string"
					  },
				    {
						  "paramType": "query",
              "name": "redirect_uri",							
					    "description": "A Third Party Application URI used to return the OAuth 2.0 authorization code.  This MUST be the same URI the Third Party supplied during the registration process (metadata field \"redirect-uris\".",
						  "required": true,
						  "allowMultiple": false,
              "defaultValue" : "http://greenbuttondata.org/thirdparty/OAuthCallBack",							
						  "dataType": "string"
					  },
				    {
						  "paramType": "query",
              "name": "scope",							
              "description" : "A space separated list of scope values the Third Party Application can use when requesting access tokens. *** NEED TO DOCUMENT SCOPE STRING CONTENTS ***",
						  "required": true,
						  "allowMultiple": false,		
						  "dataType": "string"
					  },
				    {
						  "paramType": "query",
              "name": "state",							
              "description" : "An opague value used by the Third Party Application to maintain state between the request and callback.",
						  "required": true,
						  "allowMultiple": false,		
						  "dataType": "string"
					  }						
					],
					"requestHeader": [
					  {
					    "type": "object",
						  "properties": {
						    "paramType": {
							    "type": "string"
					  		},
						  	"paras": {
							    "type": "array",
								  "items": {
								    "type": "object",
									  "properties": {
									    "name": {
										    "type": "string"
									  	},
										  "required": {
										    "type": "boolean",
											  "required": true
									  	},
										  "description": {
										    "type": "string"
									  	},
										  "type": {
										    "type": "string"
										  },
										  "linkType": {
										    "type": "string"
										  }
									  }
									}
								}
							}
						}
					],
					"produces": [
					  "text/html",
						"application/xhtml+xml",
						"application/xml"
					],
          "responseMessages": [
            {	
              "code" : 400,
              "message": "Bad Request",
              "parameters": [
                {	
                  "error": "[\"invalid_request\", \"unauthorized_client\", \"access_denied\", \"unsupported_response_type\", \"invalid_scope\", \"server_error\", \"temporarily_unavailable\"]",
                  "error_description": "A Human-readable text description of the error for debugging."
                }
              ]					
				    }
		      ]
			  }
			]
		},
    { "path": "/oauth/2_0/token",
      "operations" : [
        { 
					"method": "POST",
					"summary": "Third Party obtains access token using authorization_code grant type.",
					"notes": "The HTTP header must contain the Authorization: Basic {DataCustodianAuthorizationString}. This is typically an APIKey -  A string assigned by the DataCustodian {AuthorizationServer} used to authenticate the Third Party.  The Third Party utilizes the HTTP Basic authentication scheme [RFC2617] to submit this string.",
					"responseClass" : "OAuth2 JSON structure",
					"nickname" : "getAccessToken",
					"parameters" : [
						{	
							"grant_type" : "client_credentials",
							"summary" : "The OAuth2 client credentials grant type", 
							"description" : "An OAuth2 defined grant type",
							"required": true,
							"allowMultiple": false,
							"defaultValue": "client_credtials",
							"dataType": "grant_type",
							"paramType": "header"
						}
					],	    
					"produces" : [
						"application/json"
					],
					"responseMessage" : [
						{	
							"code" : 200,
							"message" : "an OAuth2 Response Message",
							"parameters" : [
								{	
									"access_token" : "A valid access_token",
									"token_type" : "bearer",
									"expires_in" : "Access Token Expiration Time"
								}
							]
						},
						{
							"code" : 400,
							"message" : "Service Not Available"
						}
					]
				}
			]
    },
    {
      "path": "/oauth/2_0/token",
      "operations" : [
        {	
					"method": "POST",
					"summary": "Third Party obtains access token using client_credentials grant type.",
					"notes": "The HTTP header must contain the Authorization: Bearer {DataCustodianAuthorizationString}. This is typically an APIKey -  A string assigned by the DataCustodian {AuthorizationServer} used to authenticate the Third Party.  The Third Party utilizes the HTTP Basic authentication scheme [RFC2617] to submit this string.",
					"responseClass" : "OAuth2 JSON structure",
					"nickname" : "getAccessToken",
					"parameters" : [
						{	
							"grant_type" : "client_credentials",
							"summary" : "The OAuth2 client credentials grant type", 
							"description" : "An OAuth2 defined grant type",
							"required": true,
							"allowMultiple": false,
							"defaultValue" : "Bearer {DataCustodianAuthorizationString}",
							"dataType": "String",
							"paramType": "head"
						}
					],	    
					"produces" : [
						"application/json"
					],
					"responseMessage" : [
						{	
							"code" : 200,
							"message" : "an OAuth2 Response Message",
							"parameters" : [
								{	
									"access_token" : "A valid access_token",
									"token_type" : "bearer",
									"expires_in" : "Access Token Expiration Time"
								}
							]
						},
						{
							"code" : 400,
							"message" : "Service Not Available"
						}
					]
				}
			]
    },
    {
      "path": "/espi/1_1/resource/ReadServiceStatus",
      "operations" : [
        {	
					"method": "GET",
					"summary": "Obtain the Data Custodian Resource Server Status",
					"notes": "The HTTP header must contain a valid access_token of token_type \"bearer\" as well as a valid expires_in time.",
					"responseClass" : "application/atom+xml",
					"nickname" : "getServiceStatus",
          "produces" : [
            "application/xml"
          ],
          "authorizations": [
            "oauth2"
          ],
          "parameters": [
            { 
              "name": "Authorization",
              "description": "Access Token",
              "defaultValue": "Basic {access_token}",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            },
            {
              "name": "Accept",
              "description": "Accept type for the Request",
              "defaultValue": "application/atom+xml",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            }
          ],
          "responseMessages" : [
            {	
              "code" : 200,
              "parameters" : [
                {	
                  "feed" : "An ESPI XML representation of <example to be supplied>"
                }
              ]
            },
            {
              "code" : 400,
              "message" : "Service Not Available"
            }
          ]
				}
      ]
    },
    { "path": "/espi/1_1/resource/ThirdParty/{ThirdPartyID}/Batch",
      "operations" : [
				{	
					"method": "GET",
					"summary": "A Third Party requests the GET of a Batch.",
					"notes": "",
					"responseClass" : "ESPI XML structure of Batch feed",
					"nickname" : "getBatch",
					"produces" : [
						"application/atom+xml"
					],
          "authorizations": [
            "oauth2"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "description": "Access Token",
							"defaultValue": "Basic {access_token}",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            },
            {
              "name": "Accept",
              "description": "Accept type for the Request",
							"defaultValue": "application/atom+xml",
              "required": true,
              "allowMultiple": false,
              "dataType": "String",
              "paramType": "header"
            }
          ],
					"responseMessages" : [
						{	
							"code" : 200,
							"message" : "an OAuth2 Response Message",
							"parameters" : [
								{	"access_token" : "A valid access_token",
									"token_type" : "bearer",
									"expires_in" : "Access Token Expiration Time"
								}
							]
						},
						{
							"code" : 400,
							"message" : "Service Not Available"
						}
					]
				}
			]
    }
  ],
  "models": {
    "Authorization": {
      "id": "Authorization",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Registration Information Response": {
      "properties": {
        "client_id": {
					"required": true,
          "type":"string"
        },
        "client_secret": {
					"required": true,				
          "type":"string"
        },
        "client_id_issued_at": {
					"required": true,				
          "type":"string, date-time"
        },
        "client_secret_expires_at": {
					"required": true,				
          "type":"string, date-time"
        },
        "registration_access_token": {
					"required": true,				
          "type":"string"
        },
        "registration_client_uri": {
					"required": true,				
          "type":"string"
        },				
        "redirect_uris": {
					"required": true,				
          "type":"string"
        },
        "client_name": {
					"required": true,				
          "type":"string"
        },
        "client_uri": {
					"required": true,				
          "type":"string"
        },
        "logo_uri": {
					"required": true,				
          "type":"string"
        },
        "contacts": {
					"required": true,				
          "type":"array",
					"items": {
						"type": "string"
					}
        },
        "tos_uri": {
					"required": true,				
          "type":"string"
        },
        "policy_uri": {
					"required": true,				
          "type":"string"
        },
        "token_endpoint_auth_method": {
					"required": true,				
          "type":"string",
					"description": "OAuth 2.0 token endpoint authentication method",
          "enum":[
            "client_secret_basic"
          ]
        },
        "scope": {
					"required": true,				
          "type":"string"
        },
        "grant_types": {
					"required": true,				
          "type":"array",
					"items": {
						"type": "string"
						},
					"description": "OAuth 2.0 grant types",
          "enum":["authorization_code","client_credentials","refresh_token"]
        },
        "response_types": {
					"required": true,				
          "type":"string",
					"description": "OAuth 2.0 response types",
          "enum":["code"]
        },
        "software_id": {
					"required": true,				
          "type":"string",
					"description": "OAuth 2.0 software_id"
        },
        "software_version": {
					"required": true,				
          "type":"string",
					"description": "OAuth 2.0 software_version"
        },				
        "application_description": {
					"required": true,				
          "type":"string"
        },
        "application_type": {
					"required": true,				
          "type":"string",
					"description": "ESPI application type",
          "enum":["1 - Web Application","2 -  Desktop Application","3 - Mobile Application"]
        },
        "application_use": {
					"required": true,				
          "type":"string",
					"description": "ESPI application use",
          "enum":["1 - Energy Management","2 - Comparisons","3 - Government","4 - Academic","5 - Law Enforcement"]
        },
        "third_party_application_status": {
					"required": true,
          "description": "ESPI Third Party application status",					
          "type":"string",
          "enum":["1 - Development","2 - Review/Test","3 - Production (Live)","4 - Retired (Remove)"]
        },
        "third_party_notify_uri": {
					"required": true,				
          "type":"string"
        }
      },
      "id": "Registration Information Response"
    },
    "OAuth 2.0 Authorization Response": {
      "properties": {
        "code": {
				  "paramType": "query",
					"required": true,
					"description": "Authorization code.  The authorization code MUST expire shortly and MUST NOT be used more than once.",
          "type":"string"
        },
        "state": {
				  "paramType": "query",
					"required": true,
          "description": "MUST contain the exact value received in the request.",					
          "type":"string"
        }
      },
      "id": "OAuth 2.0 Authorization Response"
    }	
  }
}
