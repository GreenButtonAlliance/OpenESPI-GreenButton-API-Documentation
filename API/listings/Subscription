{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://greenbuttondata.org/datacustodian",
  "resourcePath": "/resources",
  "produces": [
    "application/xml",
    "text/plain",
    "text/html"
  ],
  "apis": [
    {
      "path": "/espi/1_1/resource/Subscription",
      "operations": [
        {
          "method": "GET",
          "summary": "Finds all Subscriptions",
          "notes": "An XML representation of all Subscriptions will be returned",
          "responseClass": "<feed> ... </feed>",
          "nickname": "findSubscriptions",
          "produces": [
            "application/xml"
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "There are no Subscriptions"
            }
          ]
	      },
        {
          "method": "POST",
          "summary": "Add a new Subscription to the Data Custodian",
          "notes": "The New Subscription will be added",
          "responseClass": "void",
          "nickname": "addSubscription",
          "parameters": [
            {
              "name": "Subscription",
              "description": "0 or more Subscriptions that need to be added to the Subscription",
              "required": false,
              "allowMultiple": true,
              "dataType": "Subscription",
              "paramType": "Subscription"
            }
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        }
      ]
    },
    {
      "path": "/espi/1_1/resource/Subscription/{SubscriptionID}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve a Subscription Using it's ID",
          "notes": "Returns a Subscription",
          "responseClass": "Subscription",
          "nickname": "getSubscription",
          "produces": [
            "application/xml"
          ],
          "authorizations": [
            "oauth2"
          ],
          "parameters": [
            {
              "name": "usagepontID",
              "description": "ID of the Subscription that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid Subscription ID supplied"
            },
            {
              "code": 404,
              "message": "Subscription not found"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update an existing Subscription within the DataCustodian",
          "notes": "The Subscription must exist",
          "responseClass": "void",
          "nickname": "updateSubscription",
          "parameters": [
            {
              "name": "Subscription",
              "description": "A Subscription object that needs to be updated",
              "required": true,
              "allowMultiple": false,
              "dataType": "Subscription",
              "paramType": "Subscription"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid SubscriptionID supplied"
            },
            {
              "code": 404,
              "message": "Subscription not found"
            },
            {
              "code": 405,
              "message": "Validation exception"
            }
          ]
	},
        {
          "method": "DELETE",
          "summary": "Deletes a Subscription",
          "notes": "",
          "responseClass": "void",
          "nickname": "deleteSubscription",
          "parameters": [
            {
              "name": "SubscriptionID",
              "description": "Subscription id to delete",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid Subscription ID"
            }
          ]
        }

      ]
    }
  ],
  "models": {
    "Authorization": {
      "id": "Authorization",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UsagePoint": {
      "id": "UsagePoint",
      "description": "A pet is a person's best friend",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "MeterReadings": {
          "type": "list",
          "items": {
            "$ref": "MeterReading"
          }
        },
        "ReadingType": {
          "type": "array",
          "items": {
            "$ref": "ReadingType"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        },
        "MeterReadingCollection": {
          "$ref": "MeterReading"
        }
      }
    },
    "MeterReading": {
      "id": "MeterReading",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationInformation": {
      "id": "ApplicationInformation",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Subscription": {
      "id": "Subscription",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ReadingType": {
      "id": "ReadingType",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "IntervalBlock": {
      "id": "IntervalBlock",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ElectricPowerUsageSummary": {
      "id": "ElectricPowerUsageSummary",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LocalTime": {
      "id": "LocalTime",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ElectricPowerUsageSummary": {
      "id": "ElectricPowerUsageSummary",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    }

  }
}