{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "https://sandbox.greenbuttonalliance.org:8443/DataCustodian",
  "resourcePath": "/usagepoint",
  "produces":
	[
    "application/atom+xml"
  ],
  "apis":
	[
    {
      "path": "/espi/1_1/resource/LocalTimeParameters",
      "operations":
			[
        {
          "method": "GET",
          "summary": "Retrieve all Local Time Parameters [FB_32]",
          "notes": "An XML representation of all Local Time Parameters will be returned. To provide the required Bearer access token in the HTTP Authorization header, enter the <strong>\"data_custodian_access_token\"</strong> or <strong>\"access_token\"</strong> in the appropriate field at the top of this web page!",
          "nickname": "findLocalTimeParameters",
          "authorizations": ["oauth2"],
          "parameters":
					[
            {
              "name": "published-max",
              "description": "The upper bound on the published date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "published-min",
              "description": "The lower bound on the published date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "updated-max",
              "description": "The upper bound on the updated date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "updated-min",
              "description": "The lower bound on the updated date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "max-results",
              "description": "The upper bound on the number of entries to be contained in a reply.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            },
            {
              "name": "start-index",
              "description": "The one based offset in the DataCustodian's collection of Local Time Parameters that should be transferred as the first entry of the response.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            },
            {
              "name": "depth",
              "description": "The maximum number of entries to be transferred in the response.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            }
					],
          "responseMessages":
					[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ]
	      },
        {
          "method": "POST",
          "summary": "Add a new Local Time Parameter [FB_33]",
          "notes": "To provide the required Bearer access token in the HTTP Authorization header, enter the <strong>\"data_custodian_access_token\"</strong> in the appropriate field at the top of this web page!",
          "nickname": "addLocalTimeParameter",
          "consumes": ["application/atom+xml"],					
          "authorizations": ["oauth2"],
          "parameters":
					[
            {
              "name": "localTimeParameterData",
              "description": "1 or more Local Time Parameters to be added.",
              "required": false,
              "allowMultiple": true,
              "dataType": "string",
              "paramType": "body"
            }
          ],
          "responseMessages":
					[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ]
        }
      ]
    },
    {
      "path": "/espi/1_1/resource/LocalTimeParameters/{localTimeParameterId}",
      "operations":
			[
        {
          "method": "GET",
          "summary": "Retrieve a Local Time Parameter Using it's Id [FB_32]",
          "notes": "To provide the required Bearer access token in the HTTP Authorization header, enter the <strong>\"data_custodian_access_token\"</strong> or <strong>\"access_token\"</strong> in the appropriate field at the top of this web page!",
          "nickname": "getLocalTimeParameter",
          "authorizations": ["oauth2"],
          "parameters":
					[
            {
              "name": "localTimeParameterId",
              "description": "Id of the Local Time Parameter.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
            {
              "name": "published-max",
              "description": "The upper bound on the published date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "published-min",
              "description": "The lower bound on the published date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "updated-max",
              "description": "The upper bound on the updated date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "updated-min",
              "description": "The lower bound on the updated date of the Local Time Parameter.",
              "required": false,
              "allowMultiple": false,
              "dataType": "Date",
              "paramType": "query"
            },
            {
              "name": "max-results",
              "description": "The upper bound on the number of entries to be contained in a reply.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            },
            {
              "name": "start-index",
              "description": "The one based offset in the DataCustodian's collection of Local Time Parameters that should be transferred as the first entry of the response.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            },
            {
              "name": "depth",
              "description": "The maximum number of entries to be transferred in the response.",
              "required": false,
              "allowMultiple": false,
              "dataType": "long",
              "paramType": "query"
            }
          ],
          "responseMessages":
					[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update an existing Local Time Parameter [FB_33]",
          "notes": "The Local Time Parameter must exist. To provide the required Bearer access token in the HTTP Authorization header, enter the <strong>\"data_custodian_access_token\"</strong> in the appropriate field at the top of this web page!",
          "nickname": "updateLocalTimeParameter",
          "consumes": ["application/atom+xml"],					
          "authorizations": ["oauth2"],
          "parameters":
					[
            {
              "name": "localTimeParameterId",
              "description": "Id of Local Time Parameter to delete",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
            {
              "name": "localTimeParameterData",
              "description": "The Local Time Parameter to be updated.",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "body"
            }
          ],
          "responseMessages":
					[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Delete a Local Time Parameter [FB_33]",
          "nickname": "deleteLocalTimeParameter",
          "notes": "To provide the required Bearer access token in the HTTP Authorization header, enter the <strong>\"data_custodian_access_token\"</strong> in the appropriate field at the top of this web page!",
          "produces": ["application/xml"],
          "authorizations": ["oauth2"],
          "parameters":
					[
            {
              "name": "localTimeParameterId",
              "description": "Id of Local Time Parameter to delete",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages":
					[
            {
              "code": 200,
              "message": "OK"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 403,
              "message": "Forbidden"
            }
          ]
        }
      ]
    }
  ]
}
